package ar.TpDisenio2019.Modelo;
// Generated 19/01/2020 00:05:34 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DTOPoliza generated by hbm2java
 */
@Entity
@Table(name = "poliza", catalog = "dbelaseguradov4")
public class Poliza implements java.io.Serializable {

	private Integer identNroPoliza;
	private Cliente cliente;
	private Cuota cuota;
	private Datosdehijo datosdehijo;
	private Estado estado;
	private Factoresusados factoresusados;
	private Formasdepago formasdepago;
	private Kmporanio kmporanio;
	private Medidasdeseguridad medidasdeseguridad;
	private Numeropoliza numeropoliza;
	private Parametrosgenerales parametrosgenerales;
	private Siniestro siniestro;
	private Tipocobertura tipocobertura;
	private Vehiculo vehiculo;
	private Integer idEstadoCliente;
	private Date fechaInicioVigencia;
	private Date fechaFinVigencia;
	private Float sumaAsegurada;
	private Character nroSiniestro;
	private Integer cantidad;
	private Set<Modificacionpoliza> modificacionpolizas = new HashSet<Modificacionpoliza>(0);

	public Poliza() {
	}

	public Poliza(Cliente cliente, Cuota cuota, Datosdehijo datosdehijo, Estado estado, Factoresusados factoresusados,
			Formasdepago formasdepago, Kmporanio kmporanio, Medidasdeseguridad medidasdeseguridad,
			Numeropoliza numeropoliza, Parametrosgenerales parametrosgenerales, Siniestro siniestro,
			Tipocobertura tipocobertura, Vehiculo vehiculo, Integer idEstadoCliente, Date fechaInicioVigencia,
			Date fechaFinVigencia, Float sumaAsegurada, Character nroSiniestro, Integer cantidad,
			Set<Modificacionpoliza> modificacionpolizas) {
		this.cliente = cliente;
		this.cuota = cuota;
		this.datosdehijo = datosdehijo;
		this.estado = estado;
		this.factoresusados = factoresusados;
		this.formasdepago = formasdepago;
		this.kmporanio = kmporanio;
		this.medidasdeseguridad = medidasdeseguridad;
		this.numeropoliza = numeropoliza;
		this.parametrosgenerales = parametrosgenerales;
		this.siniestro = siniestro;
		this.tipocobertura = tipocobertura;
		this.vehiculo = vehiculo;
		this.idEstadoCliente = idEstadoCliente;
		this.fechaInicioVigencia = fechaInicioVigencia;
		this.fechaFinVigencia = fechaFinVigencia;
		this.sumaAsegurada = sumaAsegurada;
		this.nroSiniestro = nroSiniestro;
		this.cantidad = cantidad;
		this.modificacionpolizas = modificacionpolizas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "identNroPoliza", unique = true, nullable = false)
	public Integer getIdentNroPoliza() {
		return this.identNroPoliza;
	}

	public void setIdentNroPoliza(Integer identNroPoliza) {
		this.identNroPoliza = identNroPoliza;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idCliente")
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idCuotas")
	public Cuota getCuota() {
		return this.cuota;
	}

	public void setCuota(Cuota cuota) {
		this.cuota = cuota;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idDatosHijo")
	public Datosdehijo getDatosdehijo() {
		return this.datosdehijo;
	}

	public void setDatosdehijo(Datosdehijo datosdehijo) {
		this.datosdehijo = datosdehijo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idEstado")
	public Estado getEstado() {
		return this.estado;
	}

	public void setEstado(Estado estado) {
		this.estado = estado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idFacUsados")
	public Factoresusados getFactoresusados() {
		return this.factoresusados;
	}

	public void setFactoresusados(Factoresusados factoresusados) {
		this.factoresusados = factoresusados;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idFormasDePago")
	public Formasdepago getFormasdepago() {
		return this.formasdepago;
	}

	public void setFormasdepago(Formasdepago formasdepago) {
		this.formasdepago = formasdepago;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idKmPorAnio")
	public Kmporanio getKmporanio() {
		return this.kmporanio;
	}

	public void setKmporanio(Kmporanio kmporanio) {
		this.kmporanio = kmporanio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idMedidasSeguridad")
	public Medidasdeseguridad getMedidasdeseguridad() {
		return this.medidasdeseguridad;
	}

	public void setMedidasdeseguridad(Medidasdeseguridad medidasdeseguridad) {
		this.medidasdeseguridad = medidasdeseguridad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "nroPoliza")
	public Numeropoliza getNumeropoliza() {
		return this.numeropoliza;
	}

	public void setNumeropoliza(Numeropoliza numeropoliza) {
		this.numeropoliza = numeropoliza;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idParametrosGenerales")
	public Parametrosgenerales getParametrosgenerales() {
		return this.parametrosgenerales;
	}

	public void setParametrosgenerales(Parametrosgenerales parametrosgenerales) {
		this.parametrosgenerales = parametrosgenerales;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idSiniestro")
	public Siniestro getSiniestro() {
		return this.siniestro;
	}

	public void setSiniestro(Siniestro siniestro) {
		this.siniestro = siniestro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idTipoCobertura")
	public Tipocobertura getTipocobertura() {
		return this.tipocobertura;
	}

	public void setTipocobertura(Tipocobertura tipocobertura) {
		this.tipocobertura = tipocobertura;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idVehiculo")
	public Vehiculo getVehiculo() {
		return this.vehiculo;
	}

	public void setVehiculo(Vehiculo vehiculo) {
		this.vehiculo = vehiculo;
	}

	@Column(name = "idEstadoCliente")
	public Integer getIdEstadoCliente() {
		return this.idEstadoCliente;
	}

	public void setIdEstadoCliente(Integer idEstadoCliente) {
		this.idEstadoCliente = idEstadoCliente;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechaInicioVigencia", length = 10)
	public Date getFechaInicioVigencia() {
		return this.fechaInicioVigencia;
	}

	public void setFechaInicioVigencia(Date fechaInicioVigencia) {
		this.fechaInicioVigencia = fechaInicioVigencia;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechaFinVigencia", length = 10)
	public Date getFechaFinVigencia() {
		return this.fechaFinVigencia;
	}

	public void setFechaFinVigencia(Date fechaFinVigencia) {
		this.fechaFinVigencia = fechaFinVigencia;
	}

	@Column(name = "sumaAsegurada", precision = 6)
	public Float getSumaAsegurada() {
		return this.sumaAsegurada;
	}

	public void setSumaAsegurada(Float sumaAsegurada) {
		this.sumaAsegurada = sumaAsegurada;
	}

	@Column(name = "nroSiniestro", length = 1)
	public Character getNroSiniestro() {
		return this.nroSiniestro;
	}

	public void setNroSiniestro(Character nroSiniestro) {
		this.nroSiniestro = nroSiniestro;
	}

	@Column(name = "cantidad")
	public Integer getCantidad() {
		return this.cantidad;
	}

	public void setCantidad(Integer cantidad) {
		this.cantidad = cantidad;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "poliza")
	public Set<Modificacionpoliza> getModificacionpolizas() {
		return this.modificacionpolizas;
	}

	public void setModificacionpolizas(Set<Modificacionpoliza> modificacionpolizas) {
		this.modificacionpolizas = modificacionpolizas;
	}

}
